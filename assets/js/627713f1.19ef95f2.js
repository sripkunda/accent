"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[893],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,h=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9146:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],u={sidebar_position:4},l="Dynamic Routes",s={unversionedId:"router/dynamic-routes",id:"router/dynamic-routes",isDocsHomePage:!1,title:"Dynamic Routes",description:'Dynamic routes allow you add "wildcard" inputs to your routes that can be later interpreted as variable values. A good example of this is a user profile system.',source:"@site/docs/router/dynamic-routes.md",sourceDirName:"router",slug:"/router/dynamic-routes",permalink:"/docs/router/dynamic-routes",editUrl:"https://github.com/sripkunda/accent/tree/master/docs/docs/router/dynamic-routes.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Loading Routes",permalink:"/docs/router/loading-routes"},next:{title:"Paths",permalink:"/docs/router/paths"}},c=[{value:"Syntax",id:"syntax",children:[]},{value:"Protected Routes",id:"protected-routes",children:[]},{value:"Putting It All Together",id:"putting-it-all-together",children:[]}],p={toc:c};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dynamic-routes"},"Dynamic Routes"),(0,a.kt)("p",null,'Dynamic routes allow you add "wildcard" inputs to your routes that can be later interpreted as variable values. A good example of this is a user profile system. '),(0,a.kt)("p",null,"Let's take the URL: ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/"},"https://github.com/"),(0,a.kt)("b",null,"sripkunda")),". In this case, the ",(0,a.kt)("inlineCode",{parentName:"p"},"sripkunda")," portion of the URL will interpreted as a variable. This variable can then be accessed at runtime to render the content accordingly. "),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,"Paths with dynamic routes follow the ",(0,a.kt)("inlineCode",{parentName:"p"},"/normal/:dynamic")," syntax, where in the aforementioned example, ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic")," is the name of the dynamic parameter. "),(0,a.kt)("p",null,"Multiple dynamic parameters can be created as well: ",(0,a.kt)("inlineCode",{parentName:"p"},"/:one/:two/"),". ",(0,a.kt)("strong",{parentName:"p"},"Note that there must be a trailing slash for accent to recognize a route as dynamic."),"."),(0,a.kt)("h2",{id:"protected-routes"},"Protected Routes"),(0,a.kt)("p",null,"Protected routes allow you to fallback to a different route in the case that a certain routing parameter is not provided. On any ",(0,a.kt)("inlineCode",{parentName:"p"},"<router-target></router-target>")," element, use the following syntax: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<router-target router-protect="[valid javascript boolean logic]" \n               router-fallback="[route to go to in the case that the protection fails]">\n...\n</router-target>\n')),(0,a.kt)("h2",{id:"putting-it-all-together"},"Putting It All Together"),(0,a.kt)("p",null,"Knowing how Accent's routing works behind the scenes helps you better use and understand dynamic routes in Accent. "),(0,a.kt)("p",null,"Whenever a URL or path is given to the Accent router, it searches the JSON data of possible routes to find the best match to route to. This search is done ",(0,a.kt)("strong",{parentName:"p"},"in order"),", meaning that the first match is always taken as the best match. "),(0,a.kt)("p",null,"Why is this important? Well, let's take a look at the example below. "),(0,a.kt)("p",null,"If we want to go to GitHub's landing page, we can get there using two URLs:  ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/home"},"https://github.com/home"))," and ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/"},"https://github.com/")),". However, ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/"},"https://github.com/"))," is still a parent route for a link to a user profile, ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/sripkunda"},"https://github.com/sripkunda")),". Whenever the username is not provided, we automatically go to ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/"},"https://github.com/")),". "),(0,a.kt)("p",null,"Let's implement this in Accent: "),(0,a.kt)("p",null,"In our router initialization, let's give an additional route for the ",(0,a.kt)("inlineCode",{parentName:"p"},"home")," route and use a dynamic route on the ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," route: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'Accent.$router({\n    home: {\n        path: ["/", "/home"]\n        src: "home.html"\n    },\n    user: {\n        path: "/:username", \n        src: "user.html"\n    }\n});\n')),(0,a.kt)("p",null,"Now, in our ",(0,a.kt)("inlineCode",{parentName:"p"},"user.html")," file, we can specify (assume that ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," is the global routing object returned by ",(0,a.kt)("inlineCode",{parentName:"p"},"Accent.$router"),"): "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<router-target router-protect="App.params.username" router-fallback="home">\n...\n</router-target>\n')),(0,a.kt)("p",null,"Now, we get the aforementioned functionality described in the github example."))}m.isMDXComponent=!0}}]);